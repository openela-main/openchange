diff -up openchange-2.1-QUADRANT/libmapi/emsmdb.c.symbol-clash openchange-2.1-QUADRANT/libmapi/emsmdb.c
--- openchange-2.1-QUADRANT/libmapi/emsmdb.c.symbol-clash	2014-04-28 11:58:17.560932938 +0200
+++ openchange-2.1-QUADRANT/libmapi/emsmdb.c	2014-04-28 12:00:21.085927789 +0200
@@ -644,7 +644,7 @@ struct mapi_notify_ctx *emsmdb_bind_noti
 	notify_ctx->notifications->next = NULL;
 
 	openchange_load_interfaces(mem_ctx, lpcfg_interfaces(mapi_ctx->lp_ctx), &ifaces);
-	ipaddr = iface_best_ip(ifaces, mapi_ctx->session->profile->server);
+	ipaddr = libmapi_iface_best_ip(ifaces, mapi_ctx->session->profile->server);
 	if (!ipaddr) {
 		talloc_free(notify_ctx->notifications);
 		talloc_free(notify_ctx);
diff -up openchange-2.1-QUADRANT/libmapi/libmapi_private.h.symbol-clash openchange-2.1-QUADRANT/libmapi/libmapi_private.h
--- openchange-2.1-QUADRANT/libmapi/libmapi_private.h.symbol-clash	2014-04-28 11:58:17.560932938 +0200
+++ openchange-2.1-QUADRANT/libmapi/libmapi_private.h	2014-04-28 12:05:13.875915584 +0200
@@ -123,13 +123,13 @@ uint16_t		mapi_recipients_RecipientFlags
 
 /* The following private definitions come from libmapi/socket/interface.c  */
 void			openchange_load_interfaces(TALLOC_CTX *, const char **, struct interface **);
-int			iface_count(struct interface *);
-const char		*iface_n_ip(struct interface *, int);
-const char		*iface_n_bcast(struct interface *, int);
-const char		*iface_n_netmask(struct interface *, int);
-const char		*iface_best_ip(struct interface *, const char *);
-bool			iface_is_local(struct interface *, const char *);
-bool			iface_same_net(const char *, const char *, const char *);
+int			libmapi_iface_count(struct interface *);
+const char		*libmapi_iface_n_ip(struct interface *, int);
+const char		*libmapi_iface_n_bcast(struct interface *, int);
+const char		*libmapi_iface_n_netmask(struct interface *, int);
+const char		*libmapi_iface_best_ip(struct interface *, const char *);
+bool			libmapi_iface_is_local(struct interface *, const char *);
+bool			libmapi_iface_same_net(const char *, const char *, const char *);
 
 __END_DECLS
 
diff -up openchange-2.1-QUADRANT/libmapi/socket/interface.c.symbol-clash openchange-2.1-QUADRANT/libmapi/socket/interface.c
--- openchange-2.1-QUADRANT/libmapi/socket/interface.c.symbol-clash	2014-04-23 21:43:06.000000000 +0200
+++ openchange-2.1-QUADRANT/libmapi/socket/interface.c	2014-04-28 11:58:17.560932938 +0200
@@ -228,7 +228,7 @@ void openchange_load_interfaces(TALLOC_C
 /**
   how many interfaces do we have
   **/
-int iface_count(struct interface *ifaces)
+int libmapi_iface_count(struct interface *ifaces)
 {
 	int ret = 0;
 	struct interface *i;
@@ -241,7 +241,7 @@ int iface_count(struct interface *ifaces
 /**
   return IP of the Nth interface
   **/
-const char *iface_n_ip(struct interface *ifaces, int n)
+const char *libmapi_iface_n_ip(struct interface *ifaces, int n)
 {
 	struct interface *i;
   
@@ -257,7 +257,7 @@ const char *iface_n_ip(struct interface
 /**
   return bcast of the Nth interface
   **/
-const char *iface_n_bcast(struct interface *ifaces, int n)
+const char *libmapi_iface_n_bcast(struct interface *ifaces, int n)
 {
 	struct interface *i;
   
@@ -273,7 +273,7 @@ const char *iface_n_bcast(struct interfa
 /**
   return netmask of the Nth interface
   **/
-const char *iface_n_netmask(struct interface *ifaces, int n)
+const char *libmapi_iface_n_netmask(struct interface *ifaces, int n)
 {
 	struct interface *i;
   
@@ -290,7 +290,7 @@ const char *iface_n_netmask(struct inter
   return the local IP address that best matches a destination IP, or
   our first interface if none match
 */
-const char *iface_best_ip(struct interface *ifaces, const char *dest)
+const char *libmapi_iface_best_ip(struct interface *ifaces, const char *dest)
 {
 	struct interface *iface;
 	struct in_addr ip;
@@ -300,13 +300,13 @@ const char *iface_best_ip(struct interfa
 	if (iface) {
 		return iface->ip_s;
 	}
-	return iface_n_ip(ifaces, 0);
+	return libmapi_iface_n_ip(ifaces, 0);
 }
 
 /**
   return true if an IP is one one of our local networks
 */
-bool iface_is_local(struct interface *ifaces, const char *dest)
+bool libmapi_iface_is_local(struct interface *ifaces, const char *dest)
 {
 	struct in_addr ip;
 
@@ -320,7 +320,7 @@ bool iface_is_local(struct interface *if
 /**
   return true if a IP matches a IP/netmask pair
 */
-bool iface_same_net(const char *ip1, const char *ip2, const char *netmask)
+bool libmapi_iface_same_net(const char *ip1, const char *ip2, const char *netmask)
 {
 	return same_net_v4(interpret_addr2(ip1),
 			interpret_addr2(ip2),
